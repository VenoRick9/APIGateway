services:
  postgres-user:
    image: postgres:13
    container_name: postgres-user
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Postgres_9
      POSTGRES_DB: user_service
    ports:
      - "5430:5432"
    volumes:
      - postgres-user-data:/var/lib/postgresql/data
    networks:
      - app-network

  postgres-auth:
    image: postgres:13
    container_name: postgres-auth
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Postgres_9
      POSTGRES_DB: auth_service
    ports:
      - "5429:5432"
    volumes:
      - postgres-auth-data:/var/lib/postgresql/data
    networks:
      - app-network

  postgres-order:
    image: postgres:13
    container_name: postgres-order
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Postgres_9
      POSTGRES_DB: order_service
    ports:
      - "5428:5432"
    volumes:
      - postgres-order-data:/var/lib/postgresql/data
    networks:
      - app-network

  redis:
    image: redis:7.4.2
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network

  user-service:
    build:
      context: ./UserService
      dockerfile: Dockerfile
    container_name: user-service
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-user:5432/user_service
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=Postgres_9
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379

    depends_on:
      - postgres-user
      - redis
    networks:
      - app-network

  auth-service:
    build:
      context: ./AuthenticationService
      dockerfile: Dockerfile
    container_name: auth-service
    ports:
      - "8079:8079"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-auth:5432/auth_service
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=Postgres_9
    depends_on:
      - postgres-auth
    networks:
      - app-network

  order-service:
    build:
      context: ./OrderService
      dockerfile: Dockerfile
    container_name: order-service
    ports:
      - "8078:8078"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-order:5432/order_service
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=Postgres_9
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - postgres-order
    networks:
      - app-network

  api-gateway:
    build:
      context: ./ApiGateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "7070:7070"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - user-service
      - auth-service
      - order-service
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres-user-data:
  postgres-auth-data:
  postgres-order-data:
  redis-data:
